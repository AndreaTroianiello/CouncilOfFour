package it.polimi.ingsw.cg23.gui.mappanel;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.LayoutStyle;
import javax.swing.table.DefaultTableModel;

import it.polimi.ingsw.cg23.gui.mapframe.FrameMap;

public class MarketPanel extends JPanel {
	private static final long serialVersionUID = 4711720372137445086L;
	private JLabel labelMarket;
    private JScrollPane scrollMarket;
    private JTable tableMarket;
    private JButton buttonBuy;
    private JButton buttonSell;
	private MapPanel map;
   
	public MarketPanel(MapPanel map) {
		this.map=map;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */                         
    private void initComponents() {
 
    	scrollMarket = new JScrollPane();
        tableMarket = new JTable();
        labelMarket = new JLabel();
        buttonBuy = new JButton();
        buttonSell = new JButton();

        setBackground(new Color(150, 111, 51));

        tableMarket.setModel(new DefaultTableModel(
            new String [][] {
                {null,null, null, null, null},
                {null,null, null, null, null},
                {null,null, null, null, null},
                {null,null, null, null, null}
            },
            new String [] {
                "Position","Type", "Value", "Coins", "Player"
            }
        ) {
			private static final long serialVersionUID = 4711720372137445086L;
			boolean[] canEdit = new boolean [] {
                false,false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableMarket.setSelectionBackground(new java.awt.Color(0, 0, 0));
        scrollMarket.setViewportView(tableMarket);

        labelMarket.setForeground(new java.awt.Color(255, 215, 0));
        labelMarket.setText("Market");

        buttonBuy.setText("Buy");
        buttonBuy.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent evt) {
				buttonBuyActionPerformed(evt);
			}
		});

        buttonSell.setText("Sell");

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(labelMarket)
                    .addComponent(scrollMarket, GroupLayout.PREFERRED_SIZE, 375, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(buttonBuy)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonSell)
                .addGap(108, 108, 108))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelMarket)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(scrollMarket, GroupLayout.PREFERRED_SIZE, 241, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonBuy)
                    .addComponent(buttonSell))
                .addGap(20, 20, 20))
        );
    }
    private void buttonBuyActionPerformed(ActionEvent evt) {
		setVisible(false);
		map.setVisible(true);
		
	}
}
